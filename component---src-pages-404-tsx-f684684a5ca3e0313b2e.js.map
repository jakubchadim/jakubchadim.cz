{"version":3,"sources":["webpack:///./src/components/layout/layout.tsx","webpack:///./src/components/layout/layout.query.ts","webpack:///./src/pages/404.tsx"],"names":["LayoutOuter","styled","div","p","image","LayoutInner","Layout","children","file","childImageSharp","fluid","base64","NotFoundPage"],"mappings":"wJAMA,IAAMA,EAAcC,IAAOC,IAAV,0EAAGD,CAAH,uSAiBK,SAACE,GAAD,OAAOA,EAAEC,SAOzBC,EAAcJ,IAAOC,IAAV,0EAAGD,CAAH,+DAoBFK,IAbU,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAClBC,ECZR,ODYQA,KAER,OACE,oCACE,kBAAC,IAAD,MACA,kBAACR,EAAD,CAAaI,MAAOI,EAAKC,gBAAgBC,MAAMC,QAC7C,kBAACN,EAAD,KAAcE,O,oCE5CtB,4CAUeK,UAPM,kBACnB,kBAAC,IAAD,KACE,yCACA,yF","file":"component---src-pages-404-tsx-f684684a5ca3e0313b2e.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { GlobalStyle } from '../../theme/theme'\nimport { Base64 } from '../../types'\nimport { useLayoutQuery } from './layout.query'\n\nconst LayoutOuter = styled.div<{ image: Base64 }>`\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: -10px;\n    left: -10px;\n    right: -10px;\n    bottom: -10px;\n    background: url(${(p) => p.image});\n    background-size: cover;\n    filter: blur(10px);\n    opacity: 0.3;\n  }\n`\n\nconst LayoutInner = styled.div`\n  position: relative;\n  max-width: 65rem;\n  z-index: 1;\n  padding: 2rem;\n`\n\nconst Layout: React.FC = ({ children }) => {\n  const { file } = useLayoutQuery()\n\n  return (\n    <>\n      <GlobalStyle />\n      <LayoutOuter image={file.childImageSharp.fluid.base64}>\n        <LayoutInner>{children}</LayoutInner>\n      </LayoutOuter>\n    </>\n  )\n}\n\nexport default Layout\n","import { graphql, useStaticQuery } from 'gatsby'\nimport { Base64 } from '../../types'\n\ntype LayoutData = {\n  file: {\n    childImageSharp: {\n      fluid: {\n        base64: Base64\n      }\n    }\n  }\n}\n\nconst query = graphql`\n  query LayoutQuery {\n    file(relativePath: { eq: \"bridge.jpg\" }) {\n      childImageSharp {\n        fluid {\n          base64\n        }\n      }\n    }\n  }\n`\n\nexport function useLayoutQuery(): LayoutData {\n  return useStaticQuery(query)\n}\n","import React from 'react'\nimport Layout from '../components/layout/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}